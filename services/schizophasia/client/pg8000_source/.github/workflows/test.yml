name: pg8000

on: [push]

jobs:
  main-test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        postgresql-version: [14, 13, 12, 11, 10]

    container: python:${{ matrix.python-version }}

    services:
      postgres:
        image: postgres:${{ matrix.postgresql-version }}
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock pytest-benchmark pytz .
      - name: Set up Postgresql
        env:
          PGHOST: postgres
          PGPASSWORD: postgres
          PGUSER: postgres
        run: |
          apt-get update
          apt-get install --yes --no-install-recommends postgresql-client
          psql -c "CREATE EXTENSION hstore;"
          psql -c "SELECT pg_reload_conf()"
      - name: Test with pytest
        env:
          PGHOST: postgres
          PGPASSWORD: postgres
        run: |
          python -m pytest -x -v -W error --ignore=test/dbapi/auth/ --ignore=test/legacy/auth/ --ignore=test/native/auth/ test --ignore=test/test_readme.py

  auth-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        postgresql-version: ["14", "10"]
        auth-type: [md5, gss, password, scram-sha-256]

    container: python:${{ matrix.python-version }}

    services:
      postgres:
        image: postgres:${{ matrix.postgresql-version }}
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: ${{ matrix.auth-type }}
          POSTGRES_INITDB_ARGS: "${{ matrix.auth-type == 'scram-sha-256' && '--auth-host=scram-sha-256' || '' }}"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock pytest-benchmark pytz .
      - name: Test with pytest
        env:
          PGHOST: postgres
          PGPASSWORD: postgres
        run: |
          python -m pytest -x -v -W error test/dbapi/auth/test_${{ matrix.auth-type }}.py test/native/auth/test_${{ matrix.auth-type }}.py test/legacy/auth/test_${{ matrix.auth-type }}.py

  ssl-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        auth-type: [md5, scram-sha-256]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: ${{ matrix.auth-type }}
          POSTGRES_INITDB_ARGS: "${{ matrix.auth-type == 'scram-sha-256' && '--auth-host=scram-sha-256' || '' }}"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Configure Postgres
        env:
          PGPASSWORD: postgres
          PGUSER: postgres
          PGHOST: localhost
        run: |
          sudo apt update
          sudo apt install --yes --no-install-recommends postgresql-client
          psql -c "ALTER SYSTEM SET ssl = on;"
          psql -c "ALTER SYSTEM SET ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'"
          psql -c "ALTER SYSTEM SET ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'"
          psql -c "SELECT pg_reload_conf()"

      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock pytest-benchmark pytz .
      - name: SSL Test
        env:
          PGPASSWORD: postgres
          USER: postgres
        run: |
          python -m pytest -x -v -W error test/dbapi/auth/test_${{ matrix.auth-type}}_ssl.py test/native/auth/test_${{ matrix.auth-type}}_ssl.py test/legacy/auth/test_${{ matrix.auth-type}}_ssl.py

  static-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: cpsnow
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 pytest flake8-alphabetize .
      - name: Lint check
        run: |
          black --check .
          flake8 .
      - name: Doctest
        env:
          PGPASSWORD: cpsnow
          USER: postgres
        run: |
          python -m pytest -x -v -W error test/test_readme.py
